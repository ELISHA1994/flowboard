#name: CI
#
#on:
#  push:
#    branches: [main, develop]
#  pull_request:
#    branches: [main, develop]
#
#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref }}
#  cancel-in-progress: true
#
#jobs:
#  lint:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      - name: Install pnpm
#        uses: pnpm/action-setup@v2
#        with:
#          version: 8
#
#      - name: Install dependencies
#        run: pnpm install
#
#      - name: Run linting
#        run: pnpm lint
#
#  type-check:
#    name: Type Check
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      - name: Install pnpm
#        uses: pnpm/action-setup@v2
#        with:
#          version: 8
#
#      - name: Install dependencies
#        run: pnpm install
#
#      - name: Run type checking
#        run: pnpm type-check
#
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      - name: Install pnpm
#        uses: pnpm/action-setup@v2
#        with:
#          version: 8
#
#      - name: Get pnpm store directory
#        shell: bash
#        run: |
#          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
#
#      - name: Setup pnpm cache
#        uses: actions/cache@v4
#        with:
#          path: ${{ env.STORE_PATH }}
#          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-store-
#
#      - name: Install dependencies
#        run: pnpm install
#
#      - name: Build applications
#        run: pnpm build
#
#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-artifacts
#          path: |
#            apps/web/.next/
#            apps/web/out/
#          retention-days: 7
#
#  docker-build:
#    name: Docker Build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build backend Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: ./apps/backend
#          file: ./apps/backend/Dockerfile
#          push: false
#          tags: flowboard-backend:latest
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#
#      - name: Build frontend Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: ./apps/web/Dockerfile
#          push: false
#          tags: flowboard-frontend:latest
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
