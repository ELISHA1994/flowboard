##name: Tests
#
#on:
#  push:
#    branches: [ main, develop ]
#  pull_request:
#    branches: [ main, develop ]
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    services:
#      postgres:
#        image: postgres:14
#        env:
#          POSTGRES_USER: testuser
#          POSTGRES_PASSWORD: testpass
#          POSTGRES_DB: testdb
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
#
#    steps:
#    - uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.11'
#
#    - name: Cache pip packages
#      uses: actions/cache@v3
#      with:
#        path: ~/.cache/pip
#        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
#        restore-keys: |
#          ${{ runner.os }}-pip-
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#        pip install -r requirements-test.txt
#
#    - name: Run unit tests
#      run: |
#        pytest -m unit --cov=app --cov-report=xml --cov-report=term
#
#    - name: Run integration tests
#      env:
#        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
#      run: |
#        pytest -m integration --cov=app --cov-append --cov-report=xml --cov-report=term
#
#    - name: Run e2e tests
#      env:
#        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
#      run: |
#        pytest -m e2e --cov=app --cov-append --cov-report=xml --cov-report=term
#
#    - name: Upload coverage to Codecov
#      uses: codecov/codecov-action@v3
#      with:
#        file: ./coverage.xml
#        flags: unittests
#        name: codecov-umbrella
#        fail_ci_if_error: true
#
#    - name: Generate coverage report
#      run: |
#        pytest --cov=app --cov-report=html
#
#    - name: Upload coverage HTML report
#      uses: actions/upload-artifact@v3
#      with:
#        name: coverage-report
#        path: htmlcov/
#
#    - name: Check coverage threshold
#      run: |
#        coverage report --fail-under=80
